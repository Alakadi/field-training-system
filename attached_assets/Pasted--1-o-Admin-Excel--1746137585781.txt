
1.	الأدوار والواجهات:
o	مسؤول الجامعة (Admin):
• استيراد بيانات الطلاب من ملف Excel (التخصص، الكلية، الرقم الجامعي، …).
• إضافة أو تعديل بيانات الطلاب والمشرفين يدوياً.
• إنشاء وتحديث دورات تدريبية وربطها بالطلاب والكليات والمشرفين.
o	المشرفون (Supervisors):
• صفحة لإدخال نتائج الدورات لكل طالب.
• عرض قائمة الطلاب المكلفين والتقدم الحالي لكلٍ منهم.
o	الطلاب (Students):
• صفحة للتسجيل وتفعيل الحساب (باستخدام الرقم الجامعي).
• عرض تفاصيل دوراتهم (المكان، التوقيت، المنهج، الدرجة المحصلة).
• التسجيل في دورات جديدة وفق الأهلية.
2.	المتطلبات التقنية:
o	الواجهة الأمامية (Frontend): React
o	الواجهة الخلفية (Backend): Node.js (Express)
o	قاعدة البيانات: MySQL
o	تبادل البيانات: API RESTful
o	استيراد/تصدير Excel: 
3.	بنية قاعدة البيانات وتصميم العلاقات:
o	تصميم قاعدة بيانات علائقية لنظام إدارة التدريب الميداني في الجامعة
نظرة عامة ومتطلبات النظام
يهدف هذا النظام إلى إدارة برامج التدريب الميداني للطلاب بالجامعة، ويشمل تسجيل الطلاب وربطهم بجهات التدريب ذات الصلة. يدعم النظام الوظائف التالية:
تسجيل الطلاب واستيراد بياناتهم من سجلات الجامعة (مثل الاسم، الرقم الجامعي، الكلية، التخصص، المستوى الدراسي، إلخ).
تمكين الطالب من اختيار جهة التدريب الميداني أو إسناد هذه الجهة من قبل المشرف الأكاديمي أو إدارة الجامعة.
ربط كل طالب بمشرف أكاديمي محدد لمتابعة أدائه الميداني.
تقييم أداء الطالب من قبل الجهة المشرفة (جهة التدريب) أثناء فترة التدريب.
إصدار تقارير أداء الطلاب وإحصائيات عامة (مثل عدد المتدربين في كل كلية، متوسط التقييمات، إلخ).
المستخدمون الرئيسيون للنظام هم الطلاب والمشرفون الأكاديميون وإدارة الجامعة، بحيث تتناسب صلاحيات كل مجموعة منهم مع مهامها (مثلاً الطلاب يدخلون بياناتهم ويختارون جهة التدريب، والمشرفون والإدارة يديرون الإسناد والتقييمات).
الكيانات الرئيسية والجداول
تمثل الكيانات التالية الجداول الأساسية في قاعدة البيانات المقترحة:
جدول الطلاب (Students): يحتوي على بيانات كل طالب. الحقول الرئيسية تتضمن:
student_id (PK): المعرف الفريد للطالب (مثلاً الرقم الجامعي).
name: اسم الطالب.
email, phone: معلومات الاتصال بالطالب.
faculty_id (FK): مفتاح خارجي يشير إلى كلية الطالب.
major_id (FK): مفتاح خارجي يشير إلى تخصص الطالب.
level_id (FK): مفتاح خارجي يشير إلى المستوى الدراسي الحالي للطالب.
supervisor_id (FK): مفتاح خارجي يشير إلى المشرف الأكاديمي المسؤول عن الطالب.
جدول المشرفين (Supervisors): يمثل أعضاء هيئة التدريس المشرفين على الطلاب. الحقول تتضمن:
supervisor_id (PK): معرف المشرف الفريد.
name: اسم المشرف.
department أو faculty_id (FK): القسم أو الكلية التي يتبعها المشرف (اختياري لتصنيف المشرفين حسب الكلية).
معلومات إضافية (مثل البريد الإلكتروني أو الهاتف) حسب الحاجة.
جدول المسؤولين الإداريين (Admins): يحوي بيانات موظفي إدارة الجامعة المسؤولين عن النظام. الحقول مثلاً:
admin_id (PK): معرف المسؤول الفريد.
name: اسم المسؤول.
role: دور أو منصب المسؤول (مثل مشرف نظام، مشرف تدريب، إلخ).
بيانات الاتصال إن وجدت.
جدول الكليات (Faculties): يحوي بيانات الكليات بالجامعة. الحقول:
faculty_id (PK): معرف الكلية.
name: اسم الكلية.
جدول التخصصات (Majors): يحوي بيانات التخصصات الأكاديمية. الحقول:
major_id (PK): معرف التخصص.
name: اسم التخصص.
faculty_id (FK): مفتاح خارجي يشير إلى الكلية التي ينتمي إليها التخصص.
جدول المستويات الدراسية (Levels): يمثل سنوات أو مستويات الدراسة (مثل أول، ثاني، ثالث، إلخ). الحقول:
level_id (PK): معرف المستوى.
name: اسم المستوى أو الوصف.
جدول جهات التدريب (TrainingSites): يتضمن بيانات مؤسسات التدريب الميداني. الحقول:
site_id (PK): معرف الجهة التدريبية.
name: اسم الجهة (مثل اسم الشركة أو المؤسسة).
address: عنوان الجهة.
معلومات الاتصال بشخص الإشراف في الجهة (مثل contact_name, contact_email) حسب الحاجة.
جدول التعيينات (التدريبات الميدانية) (Assignments): جدول وسيط يربط بين الطالب وجهة التدريب ويرصد عملية الإسناد. الحقول الرئيسية:
assignment_id (PK): معرف التعيين الفريد.
student_id (FK): مفتاح خارجي يشير إلى الطالب المعني.
site_id (FK): مفتاح خارجي يشير إلى جهة التدريب المعينة.
assigned_by_admin_id (FK): مفتاح خارجي يشير إلى المسؤول الإداري الذي قام بالإسناد (إذا أسندت الإدارة جهة التدريب).
assigned_by_supervisor_id (FK): مفتاح خارجي يشير إلى المشرف الأكاديمي الذي أسند جهة التدريب (في حال كان الإسناد عبر المشرف).
start_date, end_date: تواريخ بداية ونهاية فترة التدريب.
ملاحظة: يضمن هذا الجدول ربط الطالب بالمشرف وجهة التدريب في نفس السجل، ويوضح طريقة الإسناد (إدارياً أو إشرافياً).
جدول التقييم (Evaluations): يحفظ تقييم أداء الطالب في كل فترة تدريب. الحقول:
eval_id (PK): معرف التقييم.
assignment_id (FK): مفتاح خارجي يشير إلى سجل التعيين (Assignments) المرتبط بهذه الدورة التدريبية.
evaluation_date: تاريخ إجراء التقييم.
score أو rating: قيمة تقييم الأداء (مثلاً من 1 إلى 100 أو من 1 إلى 5).
comments: ملاحظات أو توصيفات مكتوبة للأداء.
evaluator_name أو evaluator_contact: اسم الشخص في جهة التدريب الذي قام بالتقييم (اختياري).
العلاقات بين الكيانات
تعكس العلاقات بين الجداول متطلبات النظام وحالات الاستخدام:
طالب – كلية/تخصص/مستوى: كل طالب مرتبط بكلية واحدة وتخصص واحد ومستوى دراسي واحد. (العلاقة: كلية–تخصص 1-إلى-متعدد، تخصص–طالب 1-إلى-متعدد، مستوى–طالب 1-إلى-متعدد). بمعنى آخر، يمكن لكل كلية أن تضم تخصصات متعددة، ولكل تخصص طلاب متعددين، ولكل مستوى طلاب متعددين، بينما الطالب الواحد ينتمي إلى سجل واحد لكل من الكلية والتخصص والمستوى.
طالب – مشرف: علاقة 1-إلى-متعدد حيث يمكن لمشرف أكاديمي واحد الإشراف على طلاب متعددين، ويكون كل طالب له مشرف واحد (أو في حالات خاصة يمكن ترك supervisor_id فارغًا إذا لم يحدد مشرف بعد).
طالب – جهات التدريب (من خلال جدول التعيينات): يمثل هذا علاقة متعدد-إلى-متعدد بين الطلاب وجهات التدريب، حيث يمكن للطالب الواحد أن يشارك في عدة فترات تدريبية (قد تكون في جهات مختلفة)، ويمكن لكل جهة تدريب استقبال طلاب عدة. تم تنفيذ هذه العلاقة عبر جدول وسيط (Assignments)، فلكل سجل في جدول Assignments طالب واحد وجهة تدريب واحدة.
مشرف/إدارة – تعيينات: العلاقة هنا 1-إلى-متعدد: كل مشرف أو مسؤول قد يقوم بإسناد أو متابعة عدة سجلات تدريب (عدة Assignments)، بينما كل سجل إسناد مربوط بمشرف أو مسؤول واحد قام به.
تعيينات – تقييمات: يمكن اعتبار العلاقة 1-إلى-1 أو 1-إلى-متعدد بناءً على المنطق المطلوب. في أبسط تصميم، تُخصص كل فترة تدريب تقييماً واحداً نهائياً (1-إلى-1). ولكن يمكن أيضًا السماح بتقييمات متعددة (مثل تقييم ميداني دوري)، فيكون 1 (تعيين) إلى متعدد (عدة تقييمات).
علاقات أخرى: جميع المفاتيح الخارجية تربط جداولها مع الحفاظ على التكامل: مثلاً major_id في جدول الطلاب يشير إلى سجل في جدول التخصصات، وهكذا.
قيود التكامل وقواعد التحقق
لضمان صحة وتناسق البيانات في النظام، نطبق القواعد والقيود الآتية:
المفاتيح الأساسية وفردية البيانات: كل جدول له مفتاح أساسي (PK) فريد. على سبيل المثال، يجب أن يكون student_id في جدول الطلاب فريدًا ولا يتكرر، ويمثل المعرف الرئيسي لكل طالب.
المفاتيح الخارجية والتكامل المرجعي: تُعرّف المفاتيح الخارجية (FK) لربط الجداول وبعضها. على سبيل المثال، faculty_id في جدول الطلاب هو FK يُشير إلى جدول الكليات، ويُفعل تكامل البيانات بحيث لا يمكن وضع قيمة غير موجودة في جدول الكليات. يتم استخدام قواعد (FOREIGN KEY) لمنع حذف أو تعديل السجلات المرتبطة بغير قصد.
الحقول الإلزامية والقيم الغائبة: تحديد الحقول التي يجب ألا تكون فارغة (NOT NULL). مثلاً، قد نجعل الحقول الأساسية كاسم الطالب، ورقم الطالب، ومواعيد التدريب إلخ، إلزامية. بينما يمكن أن تكون حقول كـassigned_by_supervisor_id اختياريّة (لأن الإسناد قد يتم من قبل الإدارة بدلًا من المشرف).
قواعد تحقق (CHECK) على القيم: مثلاً، تحديد مدى تقييم الأداء بحيث لا يتجاوز نطاقًا معينًا (كأن يكون من 1 إلى 5 أو من 0 إلى 100). يمكن أيضًا التحقق من صحة التواريخ (مثلاً start_date <= end_date).
قيود فريدة إضافية: إذا لزم الأمر، مثل منع تسجيل طالب لنفس جهة التدريب في نفس الفترة أكثر من مرة. أو التأكد من عدم وجود متدربين بنفس الهوية في أكثر من كلية.
سياسات الحذف والتحديث: وضع خيارات مثل (ON DELETE RESTRICT/NO ACTION أو ON DELETE CASCADE) حسب الحاجة. مثلاً، يمكن منع حذف سجل مشرف إذا كان مرتبطاً بطلاب حالياً (RESTRICT)، أو عند حذف طالب يتم حذف سجلات التعيين والتقييم المرتبطة به (CASCADE).

 
الطالب فقط يقوم بمعرفة مكان التدريب من والوقت ودرجاته اذا انتهت الدورة وتاكيد الانضمام لهذه التدريب
لايمكن للطالب انشاء حساب بنفسة 

اصنع البرنامج بحيث اني سوف اواصل العمل عليه في vs code 

import { drizzle } from 'drizzle-orm/node-postgres';
import { Pool } from 'pg';
import * as schema from '../../shared/schema.ts';

async function seedFacultiesLocal() {
  const databaseUrl = process.env.DATABASE_URL;
  
  if (!databaseUrl) {
    console.error('โ ูุชุบูุฑ DATABASE_URL ุบูุฑ ููุฌูุฏ ูู ููู .env');
    process.exit(1);
  }

  const pool = new Pool({
    connectionString: databaseUrl,
  });

  const db = drizzle(pool, { schema });

  try {
    console.log('๐๏ธ  ุฅุถุงูุฉ ุงููููุงุช ูุงูุชุฎุตุตุงุช ููุจูุฆุฉ ุงููุญููุฉ...');

    // ุฅุถุงูุฉ ุงููููุงุช
    const [engineeringFaculty] = await db.insert(schema.faculties).values({
      name: 'ูููุฉ ุงูููุฏุณุฉ ูุชูููุฉ ุงููุนูููุงุช',
      description: 'ูููุฉ ูุชุฎุตุตุฉ ูู ุงูููุฏุณุฉ ูุชูููุฉ ุงููุนูููุงุช'
    }).returning().catch(() => []);

    const [medicalFaculty] = await db.insert(schema.faculties).values({
      name: 'ูููุฉ ุงูุนููู ุงูุทุจูุฉ ุงูุชุทุจูููุฉ',
      description: 'ูููุฉ ูุชุฎุตุตุฉ ูู ุงูุนููู ุงูุทุจูุฉ ูุงูุตุญูุฉ'
    }).returning().catch(() => []);

    // ุฅุถุงูุฉ ุงูุชุฎุตุตุงุช
    const majors = [
      {
        name: 'ุชูููุฉ ุงููุนูููุงุช',
        facultyId: engineeringFaculty?.id || 1,
        description: 'ุชุฎุตุต ูู ุชุทููุฑ ูุฅุฏุงุฑุฉ ุฃูุธูุฉ ุงููุนูููุงุช'
      },
      {
        name: 'ุงูููุฏุณุฉ ุงููุฏููุฉ',
        facultyId: engineeringFaculty?.id || 1,
        description: 'ุชุฎุตุต ูู ุชุตููู ูุจูุงุก ุงูููุดุขุช ุงููุฏููุฉ'
      },
      {
        name: 'ุงูุตูุฏูุฉ',
        facultyId: medicalFaculty?.id || 2,
        description: 'ุชุฎุตุต ูู ุนููู ุงูุฃุฏููุฉ ูุงูุนูุงููุฑ'
      },
      {
        name: 'ุงูุชุบุฐูุฉ ุงูุนูุงุฌูุฉ',
        facultyId: medicalFaculty?.id || 2,
        description: 'ุชุฎุตุต ูู ุงูุชุบุฐูุฉ ูุงูุนูุงุฌ ุงูุบุฐุงุฆู'
      }
    ];

    for (const major of majors) {
      await db.insert(schema.majors).values(major).catch(() => {});
    }

    console.log('โ ุชู ุฅุถุงูุฉ ุงููููุงุช ูุงูุชุฎุตุตุงุช ุจูุฌุงุญ');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงููููุงุช:', error.message);
  } finally {
    await pool.end();
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  seedFacultiesLocal();
}

export { seedFacultiesLocal };